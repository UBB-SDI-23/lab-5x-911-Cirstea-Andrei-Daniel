version: '3.8'

services:
  app:
    image: 'docker-spring-boot-postgres:latest'
    ports:
      - "8080:8080"
    build:
      context: .
    container_name: app
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mpp
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - app-network
    command: /docker-entrypoint-initdb.d/dbscripts/execute_sql_script.sh "insert_user.sql" & java -jar application.jar

  db:
    image: 'postgres:15.2-alpine'
    hostname: postgres
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mpp
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./dbscripts:/docker-entrypoint-initdb.d/dbscripts
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt/live/sdi-2023-car-dealership.crabdance.com/fullchain.pem:/etc/nginx/fullchain.pem
      - /etc/letsencrypt/live/sdi-2023-car-dealership.crabdance.com/privkey.pem:/etc/nginx/privkey.pem
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/nginx/options-ssl-nginx.conf
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/nginx/ssl-dhparams.pem
    depends_on:
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
